---
import { getCollection } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import { dateRange } from "@lib/utils";
import { HOME } from "@consts";
import { getWorkEntryLanguage } from "@lib/slug-utils";

const work = (await getCollection("work"))
  .filter((work) => {
    try {
      return getWorkEntryLanguage(work) === "ko";
    } catch {
      return false;
    }
  })
  .sort(
    (a, b) =>
      new Date(b.data.dateStart).valueOf() -
      new Date(a.data.dateStart).valueOf(),
  );
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <div>
      <section>
        <article class="space-y-8">
          <div class="animate space-y-3">
            <h6 class="text-base font-medium opacity-80">
              안녕하세요 권우석입니다.
            </h6>
            <ul class="text-sm space-y-2 opacity-75">
              <li>
                Backend Developer로 경험을 쌓고 있고 Java와 Ruby를 주로
                사용했어요.
              </li>
              <li>주력은 아니지만 필요에 따라 Frontend도 다뤄왔어요.</li>
            </ul>
          </div>

          <div class="animate space-y-3">
            <h6 class="text-base font-medium opacity-80">경력</h6>
            <ul class="text-sm space-y-2 opacity-75 list-disc list-inside">
              {
                work.map((entry) => (
                  <li class="flex items-center gap-2">
                    {entry.data.logo && (
                      <img
                        src={entry.data.logo}
                        alt={`${entry.data.company} logo`}
                        class="w-4 h-4 object-contain flex-shrink-0 -ml-6 mr-2"
                        loading="lazy"
                      />
                    )}
                    <span class="flex-1">
                      <strong class="text-xs">{entry.data.company}</strong> -{" "}
                      {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                    </span>
                  </li>
                ))
              }
            </ul>
          </div>

          <div class="animate space-y-3">
            <h6 class="text-base font-medium opacity-80">경력 외 활동</h6>
            <ul class="text-sm space-y-3 opacity-75">
              <li>
                <strong class="text-xs">G마켓 해커톤 1위</strong>
                <span class="text-xs"
                  >- 식사 / 커피를 함께 할 임직원 매칭 Slack App 개발</span
                >
                <ul class="ml-2 mt-1">
                  <li class="text-xs opacity-60">
                    <a
                      href="https://www.etnews.com/20221227000212"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >G마켓 해커톤 1위 G식당 "행사 후드티가 탐나서 참여했는데
                      우승"</a
                    >
                  </li>
                </ul>
              </li>
              <li>
                <strong class="text-xs">G마켓 테크 에디터</strong>
                <span class="text-xs">- 기술 블로그 리뷰 및 글 기고</span>
                <ul class="ml-2 mt-1 space-y-1">
                  <li class="text-xs opacity-60">
                    <a
                      href="https://dev.gmarket.com/36"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >객체는 어떻게 식별하고 구현해야 할까?</a
                    >
                  </li>
                  <li class="text-xs opacity-60">
                    <a
                      href="https://dev.gmarket.com/45"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >인증/인가는 어디에 어떻게 구현해야 할까?</a
                    >
                  </li>
                </ul>
              </li>
              <li>
                <strong class="text-xs">G마켓 좌석 예약 시스템</strong>
                <span class="text-xs"
                  >- 토이 프로젝트로 시작해 전사에서 1년간 활용</span
                >
              </li>
              <li>
                <strong class="text-xs">디프만 14기</strong>
                <span class="text-xs">- 홈서버 구축 및 어드민 개발</span>
              </li>
            </ul>
          </div>

          <div class="animate space-y-3">
            <h6 class="text-base font-medium opacity-80">오픈소스 기여</h6>
            <ul class="text-sm space-y-3 opacity-75">
              <li>
                <strong class="text-xs">Rails</strong>
                <span class="text-xs"
                  >- HTTP Cache-Control 요청 지시어 지원 추가</span
                >
                <ul class="ml-2 mt-1">
                  <li class="text-xs opacity-60">
                    <a
                      href="https://github.com/rails/rails/pull/55033"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >Add support for HTTP Cache-Control request directives</a
                    >
                  </li>
                </ul>
              </li>
              <li>
                <strong class="text-xs">Grafana 대시보드 템플릿</strong>
                <span class="text-xs"
                  >- Spring Boot 모니터링용 템플릿 3개 제작 (총 2,383회
                  다운로드)</span
                >
                <ul class="ml-2 mt-1 space-y-1">
                  <li class="text-xs opacity-60">
                    <a
                      href="https://grafana.com/grafana/dashboards/21308-http/"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >Spring Boot HTTP (1,411회 다운로드)</a
                    >
                  </li>
                  <li class="text-xs opacity-60">
                    <a
                      href="https://grafana.com/grafana/dashboards/21303-cache/"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >Spring Boot Cache (490회 다운로드)</a
                    >
                  </li>
                  <li class="text-xs opacity-60">
                    <a
                      href="https://grafana.com/grafana/dashboards/21307-circuit-breaker/"
                      target="_blank"
                      class="text-blue-600 dark:text-blue-400 hover:underline hover:opacity-100 transition-opacity"
                      >Spring Boot Circuit Breaker (482회 다운로드)</a
                    >
                  </li>
                </ul>
              </li>
            </ul>
          </div>
        </article>
      </section>
    </div>
  </Container>
</PageLayout>
