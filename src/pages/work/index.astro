---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import { dateRange } from "@lib/utils";
import { getWorkEntryLanguage } from "@lib/slug-utils";
import { WORK } from "@consts";

const collection = (await getCollection("work"))
  .filter((work) => {
    try {
      return getWorkEntryLanguage(work) === "ko";
    } catch {
      return false;
    }
  })
  .sort(
    (a, b) =>
      new Date(b.data.dateStart).valueOf() -
      new Date(a.data.dateStart).valueOf(),
  );

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  }),
);
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <ul class="flex flex-col space-y-4">
        {
          work.map((entry) => (
            <li class="animate">
              <div class="flex items-center justify-between mb-1">
                <div class="flex items-center gap-2 font-semibold text-black dark:text-white">
                  {entry.data.logo && (
                    <img 
                      src={entry.data.logo} 
                      alt={`${entry.data.company} logo`} 
                      class="w-5 h-5 rounded-sm object-contain"
                    />
                  )}
                  {entry.data.company}
                </div>
                <div class="text-xs opacity-75 font-mono">
                  {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                </div>
              </div>
              <div class="text-sm opacity-75 mb-3">{entry.data.role}</div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))
        }
      </ul>
      <!-- 
      <ul class="animate flex flex-col gap-4">

      </ul> -->
    </div>
  </Container>
</PageLayout>
